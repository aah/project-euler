#!/usr/bin/env csi -script
;;; Even Fibonacci numbers
;;; Project Euler, Problem 2
;;; http://projecteuler.net/problem=1

;; Each new term in the Fibonacci sequence is generated by adding the
;; previous two terms. By starting with 1 and 2, the first 10 terms will
;; be:

;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;; By considering the terms in the Fibonacci sequence whose values do not
;; exceed four million, find the sum of the even-valued terms.

(use srfi-41)

(define (sum-even-fibs-below max-value)
  (sum (even (fibs-below max-value))))

(define (sum stream)
  (stream-fold + 0 stream))

(define (even stream)
  (stream-filter even? stream))

(define fibs
  (let loop ((a 1) (b 1))
    (stream-cons a (loop b (+ a b)))))

(define (fibs-below n)
  (stream-take-while (lambda (fib) (< fib n)) fibs))

(print (sum-even-fibs-below 4000000))
